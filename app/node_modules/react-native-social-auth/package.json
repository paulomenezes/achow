{
  "name": "react-native-social-auth",
  "version": "0.2.0",
  "description": "React Native module provides auth methods via social networks using native APIs",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/xxsnakerxx/react-native-social-auth.git"
  },
  "keywords": [
    "react-native",
    "module",
    "auth",
    "ios",
    "android",
    "facebook",
    "twitter",
    "native"
  ],
  "author": {
    "name": "Dmitriy Kolesnikov",
    "email": "xxsnakerxx@gmail.com",
    "url": "https://github.com/xxsnakerxx"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/xxsnakerxx/react-native-social-auth/issues"
  },
  "homepage": "https://github.com/xxsnakerxx/react-native-social-auth#readme",
  "peerDependencies": {
    "react-native": ">=0.16.0"
  },
  "gitHead": "90b7551034197246fb1cd04738888eb6ab40928e",
  "readme": "# React Native Social Auth\n\n### React Native module provides auth methods via social networks using native APIs.\n#### Very important! The module doesn't provide full stack communication with social networks API, it made just for auth.\n\n![preview](images/social_auth_example.gif)\n\n## Table of contents\n- [What using](#what-using)\n- [Installation](#installation)\n  - [Common](#common)\n  - [iOS](ios#readme)\n  - [Android](android#readme)\n- [Usage](#usage)\n- [Contributing](#contributing)\n- [Copyright and license](#copyright-and-license)\n\n## What using\n- `facebook`\n  - __FacebookSDK__\n- `twitter`\n\t- __Accounts.framework and reverse auth (iOS)__\n\n## Installation\n\n### Common\n1. Install package via npm:\n\n```javascript\nnpm install react-native-social-auth\n```\n\n2. Perform platform specific setup\n  - [iOS](ios#readme)\n  - [Android](android#readme)\n\n3. Inside your code include JS part by adding\n\n  ```javascript\n  import SocialAuth from 'react-native-social-auth';\n  ```\n\n4. Compile and have fun! Or go to [example](example) and see how it works.\n\n## Usage\n\n#### Constants\n  - `SocialAuth.facebookPermissionsType.read`\n  - `SocialAuth.facebookPermissionsType.write`\n\n\n#### getFacebookCredentials(permissions, permissionsType, cb)\n  - `permissions` (Array of strings)\n  - `permissionsType` (one of [facebookPermissionsType](#constants))\n  - `cb(error, credentials)`\n    - `error` (object contains `code` and `message`)\n    - `credentials` (object contains `accessToken`, `userId`, `hasWritePermissions`)\n\n```javascript\n\nSocialAuth.getFacebookCredentials([\"email\", \"user_friends\"], SocialAuth.facebookPermissionsType.read, (error, credentials) => {\n  if (error) {\n    console.log(error);\n  } else {\n    console.log(credentials);\n  }\n});\n```\n\n#### getTwitterSystemAccounts(cb)\n  - `cb(error, accounts)`\n    - `error` (object contains `code` and `message`)\n    - `accounts` (array of objects like `{username: \"userName\"}`)\n\n```javascript\nSocialAuth.getTwitterSystemAccounts((error, accounts) => {\n  if (error) {\n    console.log(error);\n  } else {\n    console.log(accounts);\n  }\n});\n```\n\n#### getTwitterCredentials(username, [reverseAuthResponse], cb)\n  - `username` (Twitter account user name without `@`)\n  - `reverseAuthResponse` (is a string that returns by twitter's api when we do the first part of reverse auth)\n    - __you can define `key` and `secret` of your twitter app in [RNSocialAuthManager.m](ios/RNSocialAuthManager.m)__\n    ```\n    #define twitterAppConsumerKey @\"...\"\n    #define twitterAppConsumerSecret @\"...\"\n    ```\n    #### But this way is not SAFE!\n\n    - other option is that your backed can perform the first part of reverse auth and send you back response of it.\n      It's looks like this\n      ```\n      OAuth oauth_timestamp=\"...\", oauth_signature=\"...\", oauth_consumer_key=\"...\", oauth_nonce=\"...\", oauth_token=\"...\", oauth_signature_method=\"HMAC-SHA1\", oauth_version=\"1.0\"\n      ```\n      Then you just pass it to the function as a second parameter\n\n  - `cb(error, credentials)`\n    - `error` (object contains `code` and `message`)\n    - `credentials` (object contains `oauthToken`, `oauthTokenSecret`, `userName`)\n\n```javascript\nSocialAuth.getTwitterCredentials(\"dimkol\", (error, credentials) => {\n  if (error) {\n    console.log(error);\n  } else {\n    console.log(credentials);\n  }\n});\n```\n\n## Contributing\n\nJust submit a pull request!\n\n## Copyright and license\n\nCode and documentation copyright 2015 Dmitriy Kolesnikov. Code released under the [MIT license](LICENSE).\n",
  "readmeFilename": "README.md",
  "_id": "react-native-social-auth@0.2.0",
  "_shasum": "6d743f7d54454bb398037904a1888749a11693ea",
  "_from": "..",
  "_resolved": "file:.."
}
